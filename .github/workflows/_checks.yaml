on:
  workflow_call:

jobs:
  setup:
    name: Setup (${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    permissions:
      contents: "write"
      id-token: "write"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: UV setup
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          prune-cache: false
          python-version: ${{ matrix.python-version }}
          cache-suffix: "py${{ matrix.python-version }}"
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock

      - name: UV sync
        run: uv sync --all-packages --all-extras

  linter:
    name: Linter (${{ matrix.python-version }})
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    permissions:
      contents: "write"
      id-token: "write"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: UV setup
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          prune-cache: false
          python-version: ${{ matrix.python-version }}
          cache-suffix: "py${{ matrix.python-version }}"

      - name: UV sync
        run: uv sync --all-packages --all-extras

      - name: Run Ruff
        run: uv run ruff check .

  type-checker:
    name: Type Checker (${{ matrix.python-version }})
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    permissions:
      contents: "write"
      id-token: "write"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: UV setup
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          prune-cache: false
          python-version: ${{ matrix.python-version }}
          cache-suffix: "py${{ matrix.python-version }}"

      - name: UV sync
        run: uv sync --all-packages --all-extras

      - name: Run Pyright
        run: uv run pyright

  tests:
    name: Tests (${{ matrix.python-version }})
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    permissions:
      contents: "write"
      id-token: "write"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: UV setup
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          prune-cache: false
          python-version: ${{ matrix.python-version }}
          cache-suffix: "py${{ matrix.python-version }}"

      - name: UV sync
        run: uv sync --all-packages --all-extras

      - name: Run Pytest
        run: uv run pytest
