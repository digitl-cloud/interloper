on:
  workflow_call:
    secrets:
      SEMANTIC_RELEASE_APP_ID:
        required: true
      SEMANTIC_RELEASE_APP_KEY:
        required: true

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    permissions:
      contents: "write"
      id-token: "write"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0

      - name: Set release variables
        id: set-vars
        run: |
          BRANCH="${GITHUB_REF#refs/heads/}"

          case "$BRANCH" in
            main)
              echo "CHANGELOG=true" >> $GITHUB_OUTPUT
              echo "COMMIT=true" >> $GITHUB_OUTPUT
              echo "SUFFIX=''" >> $GITHUB_OUTPUT
              echo "TAG=true" >> $GITHUB_OUTPUT
              echo "VCS_RELEASE=true" >> $GITHUB_OUTPUT
              echo "PUBLISH=true" >> $GITHUB_OUTPUT
              ;;
            rc)
              echo "CHANGELOG=false" >> $GITHUB_OUTPUT
              echo "COMMIT=true" >> $GITHUB_OUTPUT
              echo "SUFFIX=''" >> $GITHUB_OUTPUT
              echo "TAG=true" >> $GITHUB_OUTPUT
              echo "VCS_RELEASE=true" >> $GITHUB_OUTPUT
              echo "PUBLISH=true" >> $GITHUB_OUTPUT
              ;;
            alpha)
              echo "CHANGELOG=false" >> $GITHUB_OUTPUT
              echo "COMMIT=true" >> $GITHUB_OUTPUT
              echo "SUFFIX=''" >> $GITHUB_OUTPUT
              echo "TAG=true" >> $GITHUB_OUTPUT
              echo "VCS_RELEASE=false" >> $GITHUB_OUTPUT
              echo "PUBLISH=false" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "CHANGELOG=false" >> $GITHUB_OUTPUT
              echo "COMMIT=false" >> $GITHUB_OUTPUT
              echo "SUFFIX=$(git branch --show-current | sed 's/[^a-zA-Z0-9-]/-/g')" >> $GITHUB_OUTPUT
              echo "TAG=false" >> $GITHUB_OUTPUT
              echo "VCS_RELEASE=false" >> $GITHUB_OUTPUT
              echo "PUBLISH=false" >> $GITHUB_OUTPUT
              ;;
          esac

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: "projects/499027771610/locations/global/workloadIdentityPools/github-actions/providers/github-actions"
          service_account: "github-actions@dc-int-connectors-prd.iam.gserviceaccount.com"

      - name: Get Google Cloud access token
        run: |
          ACCESS_TOKEN=$(gcloud auth print-access-token)
          echo "ACCESS_TOKEN=$ACCESS_TOKEN" >> $GITHUB_ENV

      - name: Get GitHub App token
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          app-id: ${{ vars.SEMANTIC_RELEASE_APP_ID }}
          private-key: ${{ secrets.SEMANTIC_RELEASE_APP_KEY }}

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Set Git user
        run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com'

      - name: Test commit and push
        run: |
          echo "test content" > test.txt
          git add .
          git commit -m "test: commit" || true
          git push
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}

      # - name: Release
      #   id: release
      #   uses: python-semantic-release/python-semantic-release@v10
      #   with:
      #     build_metadata: ${{ steps.set-vars.outputs.SUFFIX }}
      #     build: false
      #     changelog: ${{ steps.set-vars.outputs.CHANGELOG == 'true' }}
      #     commit: ${{ steps.set-vars.outputs.COMMIT == 'true' }}
      #     github_token: ${{ steps.app-token.outputs.token }}
      #     tag: ${{ steps.set-vars.outputs.TAG == 'true' }}
      #     vcs_release: ${{ steps.set-vars.outputs.VCS_RELEASE == 'true' }}
      #     git_committer_email: "${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com"
      #     git_committer_name: "${{ steps.app-token.outputs.app-slug }}[bot]"

      # - name: UV setup
      #   if: ${{ steps.set-vars.outputs.PUBLISH == 'true' && steps.release.outputs.released == 'true' }}
      #   uses: astral-sh/setup-uv@v6
      #   with:
      #     enable-cache: true
      #     python-version: "3.10"
      #     cache-suffix: "3.10"

      # - name: UV sync
      #   if: ${{ steps.set-vars.outputs.PUBLISH == 'true' && steps.release.outputs.released == 'true' }}
      #   run: uv sync --all-packages --all-extras

      # - name: Build & Publish
      #   if: ${{ steps.set-vars.outputs.PUBLISH == 'true' && steps.release.outputs.released == 'true' }}
      #   run: |
      #     uv build --all-packages
      #     uv publish --index dc-int-connectors-prd --username oauth2accesstoken --password ${{ env.ACCESS_TOKEN }} --keyring-provider subprocess
